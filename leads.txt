LEAD CAPTURE FORMS
==================

You can capture leads on any site by preparing a form with these attributes

Form Action:
/api/lead/v1

Method:
POST

Default template path:
/go

Required fields:
* title
* type
* return_url - The URL to go to when the lead form is successful (can contain __zid__ or __id__ in it)
* failure_url - The URL to return to when the lead form failed
* customer[email] - email address of the person filling this form
* customer[name] - name of the person filling the form

Payment related fields
* cart[]
Cart is a list of post id's that you want to use for invoice line items.
This will automatically make an invoice with line items for each of the posts and its price.
When you do this, you should redirect the lead page to the invoice page so the customer can pay.
example: return_url="/crm/invoice/__ZID__"

Uploads:
You can now attach files to submitted leads.
These are stored in the Files table with src="Lead" and src_id=(the id of the lead)
* files[] (must be array, even if just one file)

Post Processing:
You can pass the new lead into a post processor you wrote in Elixir by passing the permalink of the processor.
* process (a permalink)

Optional fields:
* parent_user_id (user_site.id of current user in site)
* subtype
* utm_xxxx - UTM Tracking notification fields. (xxxx can be any or all of: source, campaign, medium, etc)
* post_id - a post id associated with this lead, will notify the email in that post, or the owner of the post.
* autoresponder - a zid of a post to use as a email reply to the customer (eg digital deliveries/downloads).
* worker_user_id - a specific member of the site to tag this lead to
* scheduled - a datetime
* notes - notes in the lead
* location - a mappable address of a place eg: "345 Maple Street, Brookly, NY, 10115, USA"
* customer[phone]
* customer[phone]
* customer[gender] (male/female/other/anything)
* customer[occupation]
* customer[first_name]
* customer[last_name]
* customer[middle_name]
* customer[street]
* customer[city]
* customer[country_code] (eg: US, JM, etc)
* customer[dob] - date of birth
* customer[url]
* customer[meta1]
* customer[meta2]
* customer[meta3]
* data[xxxxx] - xxxxxx can be anything. This allows you to create quite complex forms as needed

NOTE:
Customer[xxxxxx] information will only be added once. 
If the customer already exists in the system, this information 
will not overwrite what's already there. 
Create a profile update form to deal with that.

LEAD NOTIFICATIONS
==================

post_id:
When a post_id is set on the lead, the system will send a lead notification to either the email in the post, or the owner of the post.

worker_user_id:
When you set this user_id, this member will be notified as well.

The general site email will always get all notifications.

I no post_id or worker_user_id is set, then all admins of the site will get notifications.

AUTORESPONDERS
==============

When you want a digital download, you need to prepare a post with the email content in it.
Use the "zid" of that post in the "autoresponder" field of the lead to have the post delivered.
These items in the post will be as follows:

title => subject of email
subtitle => preheader (optional)
body => the complete HTML message of the email
email => a "Reply-To" email. If not, the site's email will be used.

It will be your responsibilty to include a link to the digital download in the body of the email.

Variables available in the email
{{user.xxxx}}
{{site.xxxx}}
{{lead.xxxx}}

Leads can be viewed in the Admin.
