COLLECTIONS
===========

A collection can be a list of posts, users, leads, etc.
Special tags bring collections into the current liquid contex.

USERS
-----
Returns list of users from teh current site
with specific filters:
{% users [options] %}

Options:
role - type of user
search - search by username
subscribed - truthy, any value in here will limit to users who are subscribed
limit - how many records (default 10)
one - return a single record as a map (not in a list)

Users will always be ordered by most recently joined first.

Example - show last 10 users:
{% users limit:10 %}

Example - show only users of type "customers":
{% users limit:10, role:"customer" %}

Output is a list of rows names "members" that is similar in structures as seen in users.txt

LEADS
-----
Returns list of leads from the current site
with specific filters.
{% leads [options] %}

Options:
user_id - Leads with a a specific user_site.id (otherwise shows for currently logged in user)
type - type of lead
subtype - subtype of lead
limit - how many records (default 10)
type - one of the statuses "pending", etc
zid - zid of a specific lead
one - gets only one lead - truthy

Leads will always be ordered by most recently added first.

Example - show last 10 leads for currently logged_in user:
{% leads current_user:1, limit: 10 %}

Example - show last 5 leads of type "open"
{% leads type: "open", limit: 5 %}

TYPES
-----
Return list of types and subtypes that has content filtered by some kind of criteria
{% types [options] %}

Options:
type: filtered by a type
subtype: filtered by a subtype
name: the name of the collection instead of "types"

This will always return published types.

Example:
{% types subtype: "car", name: "car_types" %}

Returns:
[ %{type: "foo", subtype: nil}, %{type: "bar", subtype: "foobar"}, ... ]

POSTS
-----
Return list of posts from the current site
with specific filters.
{% posts [options] %}

>> Query Fields:
type - type of post (can be list of types separated by commas, example: "foo,bar,brah")
subtype - subtype of post
id
zid
src
src_id
permalink
parent_zid
created_by
tag

>> Ordering, Naming & Limiting
limit - how many posts to return
order - how to sort posts ("updated", "alpha", "newest", "pubdate", "oldest", "type", "subtype", "popular" - default: "pubdate")
query - fulltext search string
name - the name of the collection instead of "posts"
one - truthy -- returns a single post not in an array
status - show posts with status (default: "published", "unpublished", "all")

Example - show most recently published 10 posts
{% posts limit:10 %}

Example - show posts ordered alphabetically and renamed to "alpha_posts"
{% posts limit:10, order:"alpha", name:"alpha_posts" %}

Example - returns a single post and calls it "blog" in the context
{% posts zid: "12345..", name: "blog" %}

Example - Return some posts containing the text anywhere in the tag field
{% posts tag: "trump" %}

Pagination Variables:
---------------------
Replace [name] with the name of the output collection. 
Example:
{% posts limit:10, order:"alpha", name:"alpha_posts" %}
{{alpha_posts_page_number}}
{{alpha_posts_page_size}}
{{alpha_posts_total_pages}}
{{alpha_posts_total_entries}}

Options
-------
When passing options, quotes are important

"foo" - literal foo will be passed as an option
foo (without quotes) will first lookup the value of foo in the global liquid context

Example:
"site.name" - will output literally "site.name"
site.name - will output the name of the site, eg: "Biznitos"

