RUNNER
======

Can run code for custom functionality in the system.

Three ways to do this:

Liquid tags
-----------
{% runner permalink:"some_code", foo:1, bar:"2", zee:params.id, name:"some_name" %}

Will return {{runner}} or {{some_name}}, which can be numeric, map, list, binary.

HTTP Runner URL
---------------
Verbs:
GET/POST/PUT/PATCH

Path:
/xr/:permalink

CRON Runner
-----------
Runners can be run by CRON, the will run in the context of the web appliction
so all the modules available on CuratorWeb will be useable.

RETURN from Runners
-------------------
In your runner, you return:

To redirect after the work:
{:redirect, "https://someurl"}

To spit out JSON (good for ad-hoc API's):
{:json, %{foo: 1}}

Spit out text:
{:text, "hello world"}

Spit out HTML:
{:html, "<h1>hello world</h1>"}

Fully render a template with associated layout and included context:
{:render, {"/home", %{foo: 1, bar: "2"}}}

Send a download with a given filename:
{:download, {"some binary content", "file.txt"}}

Runners from CRON can output something else like:
{:ok, %{foo: :bar}}
{:ok, "5 Sites found!"}

Runners from CRON will take second element in the tuple - elem(1)
This will be store in the admin so you can see the last run time
and the last output. Good for debugging.

Only enhanced admins can create and edit runners.

ENVIRONMENT
-----------

In the URL endpoint runner, the params variable contains:
params[:conn]
params[:site]
params[:user_site] (if available)
params["xxxx"] - everything else that was passed in by the user

In the Liquid runner, the params variable contains
params[:context] - the liquid context
params[:site]
params[:user_site] (if available)
params["xxxxx"] - everything else that was passed in with the liquid tag
